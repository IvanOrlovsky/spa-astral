name: CI/CD for SPA-ASTRAL

on:
    push:
        branches:
            - main

jobs:
    build-and-push:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Log in to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PASSWORD }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v2
              with:
                  context: .
                  push: true
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:latest
                  build-args: |
                      REACT_APP_LOGIN=${{ secrets.REACT_APP_LOGIN }}
                      REACT_APP_PASSWORD=${{ secrets.REACT_APP_PASSWORD }}
                      REACT_APP_LOGIN_API=${{ secrets.REACT_APP_LOGIN_API }}
                      REACT_APP_ACCESS_TOKEN=${{ secrets.REACT_APP_ACCESS_TOKEN }}
                      REACT_APP_CARDS_API=${{ secrets.REACT_APP_CARDS_API }}
                      REACT_APP_UPDATE_USER_API=${{ secrets.REACT_APP_UPDATE_USER_API }}
                      REACT_APP_SET_USER_API=${{ secrets.REACT_APP_SET_USER_API }}

    deploy:
        needs: build-and-push
        runs-on: ubuntu-latest

        steps:
            - name: Get Portainer auth token
              id: get_token
              run: |
                  response=$(curl -s -X POST "${{ secrets.PORTAINER_HOST }}/api/auth" \
                    -H "Content-Type: application/json" \
                    -d '{"username": "${{ secrets.PORTAINER_USERNAME }}", "password": "${{ secrets.PORTAINER_PASSWORD }}"}')
                  echo "token=$(echo $response | jq -r '.jwt')" >> $GITHUB_ENV

            - name: Get Portainer endpoint ID
              id: get_endpoint
              run: |
                  endpoint_response=$(curl -s -X GET "${{ secrets.PORTAINER_HOST }}/api/endpoints" \
                    -H "Authorization: Bearer ${{ env.token }}")
                  echo "endpoint_id=$(echo $endpoint_response | jq '.[0].Id')" >> $GITHUB_ENV

            - name: Deploy to Portainer
              run: |
                  curl -X POST "${{ secrets.PORTAINER_HOST }}/api/endpoints/${{ env.endpoint_id }}/stacks" \
                    -H "Authorization: Bearer ${{ env.token }}" \
                    -H "Content-Type: application/json" \
                    --data-binary @- <<EOF
                  {
                    "Name": "spa-astral-app",
                    "StackFileContent": "version: '3.1'\nservices:\n  web:\n    image: '${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:latest'\n    ports:\n      - '80:80'\n",
                    "EndpointId": ${{ env.endpoint_id }},
                    "Prune": true
                  }
                  EOF
